// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MMLServer.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class StatusResponse
    {
        /// <summary>
        /// Initializes a new instance of the StatusResponse class.
        /// </summary>
        public StatusResponse()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StatusResponse class.
        /// </summary>
        /// <param name="statusCode">Health of the system. Possible values
        /// include: 'fail', 'pass', 'warn'</param>
        /// <param name="details">Details about the health of the system other
        /// than the status of its components.</param>
        /// <param name="components">The status of the components that make up
        /// the system.</param>
        public StatusResponse(string statusCode = default(string), IDictionary<string, object> details = default(IDictionary<string, object>), IDictionary<string, StatusResponse> components = default(IDictionary<string, StatusResponse>))
        {
            StatusCode = statusCode;
            Details = details;
            Components = components;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets health of the system. Possible values include: 'fail',
        /// 'pass', 'warn'
        /// </summary>
        [JsonProperty(PropertyName = "statusCode")]
        public string StatusCode { get; set; }

        /// <summary>
        /// Gets or sets details about the health of the system other than the
        /// status of its components.
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public IDictionary<string, object> Details { get; set; }

        /// <summary>
        /// Gets or sets the status of the components that make up the system.
        /// </summary>
        [JsonProperty(PropertyName = "components")]
        public IDictionary<string, StatusResponse> Components { get; set; }

    }
}
