// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MMLServer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class WebService
    {
        /// <summary>
        /// Initializes a new instance of the WebService class.
        /// </summary>
        public WebService()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebService class.
        /// </summary>
        /// <param name="name">Name of the published service.</param>
        /// <param name="version">Version of the Published Service.</param>
        /// <param name="versionPublishedBy">Username of the user who published
        /// this version of the published web-service.</param>
        /// <param name="creationTime">Creation time for the service.</param>
        /// <param name="snapshotId">ID of the snapshot to be used for
        /// service.</param>
        /// <param name="runtimeType">Type of the runtime. Possible values
        /// include: 'R', 'Python', 'Realtime'</param>
        /// <param name="initCode">Code to execute before the request. Specific
        /// to the runtime type.</param>
        /// <param name="code">Code to execute. Specific to the runtime
        /// type.</param>
        /// <param name="description">Description of the web service.</param>
        /// <param name="operationId">Swagger operationId/alias for the web
        /// service.</param>
        /// <param name="inputParameterDefinitions">Input parameters
        /// definitions for the execution</param>
        /// <param name="outputParameterDefinitions">Output parameter
        /// definitions for the execution</param>
        /// <param name="outputFileNames">Files that are returned by the
        /// request</param>
        /// <param name="myPermissionOnService">User's permission for this
        /// service, it is either 'read/write' or 'read only'.'read/write'
        /// means that the user can update/delete this service and 'read only'
        /// means that the user can consume it only.</param>
        public WebService(string name, string version, string versionPublishedBy = default(string), string creationTime = default(string), string snapshotId = default(string), WebServiceRuntimeType? runtimeType = default(WebServiceRuntimeType?), string initCode = default(string), string code = default(string), string description = default(string), string operationId = default(string), IList<ParameterDefinition> inputParameterDefinitions = default(IList<ParameterDefinition>), IList<ParameterDefinition> outputParameterDefinitions = default(IList<ParameterDefinition>), IList<string> outputFileNames = default(IList<string>), string myPermissionOnService = default(string))
        {
            Name = name;
            Version = version;
            VersionPublishedBy = versionPublishedBy;
            CreationTime = creationTime;
            SnapshotId = snapshotId;
            RuntimeType = runtimeType;
            InitCode = initCode;
            Code = code;
            Description = description;
            OperationId = operationId;
            InputParameterDefinitions = inputParameterDefinitions;
            OutputParameterDefinitions = outputParameterDefinitions;
            OutputFileNames = outputFileNames;
            MyPermissionOnService = myPermissionOnService;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the published service.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets version of the Published Service.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets username of the user who published this version of the
        /// published web-service.
        /// </summary>
        [JsonProperty(PropertyName = "versionPublishedBy")]
        public string VersionPublishedBy { get; set; }

        /// <summary>
        /// Gets or sets creation time for the service.
        /// </summary>
        [JsonProperty(PropertyName = "creationTime")]
        public string CreationTime { get; set; }

        /// <summary>
        /// Gets or sets ID of the snapshot to be used for service.
        /// </summary>
        [JsonProperty(PropertyName = "snapshotId")]
        public string SnapshotId { get; set; }

        /// <summary>
        /// Gets or sets type of the runtime. Possible values include: 'R',
        /// 'Python', 'Realtime'
        /// </summary>
        [JsonProperty(PropertyName = "runtimeType")]
        public WebServiceRuntimeType? RuntimeType { get; set; }

        /// <summary>
        /// Gets or sets code to execute before the request. Specific to the
        /// runtime type.
        /// </summary>
        [JsonProperty(PropertyName = "initCode")]
        public string InitCode { get; set; }

        /// <summary>
        /// Gets or sets code to execute. Specific to the runtime type.
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets description of the web service.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets swagger operationId/alias for the web service.
        /// </summary>
        [JsonProperty(PropertyName = "operationId")]
        public string OperationId { get; set; }

        /// <summary>
        /// Gets or sets input parameters definitions for the execution
        /// </summary>
        [JsonProperty(PropertyName = "inputParameterDefinitions")]
        public IList<ParameterDefinition> InputParameterDefinitions { get; set; }

        /// <summary>
        /// Gets or sets output parameter definitions for the execution
        /// </summary>
        [JsonProperty(PropertyName = "outputParameterDefinitions")]
        public IList<ParameterDefinition> OutputParameterDefinitions { get; set; }

        /// <summary>
        /// Gets or sets files that are returned by the request
        /// </summary>
        [JsonProperty(PropertyName = "outputFileNames")]
        public IList<string> OutputFileNames { get; set; }

        /// <summary>
        /// Gets or sets user's permission for this service, it is either
        /// 'read/write' or 'read only'.'read/write' means that the user can
        /// update/delete this service and 'read only' means that the user can
        /// consume it only.
        /// </summary>
        [JsonProperty(PropertyName = "myPermissionOnService")]
        public string MyPermissionOnService { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Version == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Version");
            }
        }
    }
}
